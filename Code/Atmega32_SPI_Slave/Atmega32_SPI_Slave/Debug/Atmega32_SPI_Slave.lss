
Atmega32_SPI_Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000077a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  0000077a  000007ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000c84  00000000  00000000  00000814  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000001fe  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00001696  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000016c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f53  00000000  00000000  000017b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073a  00000000  00000000  00002708  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a23  00000000  00000000  00002e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00003868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b3  00000000  00000000  00003a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000085b  00000000  00000000  00003dc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000461e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 bb 03 	jmp	0x776	; 0x776 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <string.h>						/* Include string header file */
#include "LCD_16x2_H_file.h"			/* Include LCD header file */
#include "SPI_Slave_H_file.h"			/* Include SPI slave header file */

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	00 d0       	rcall	.+0      	; 0x88 <main+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <main+0x8>
  8a:	1f 92       	push	r1
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
	uint8_t count;
	char buffer[5];
	
	LCD_Init();
  90:	0e 94 99 00 	call	0x132	; 0x132 <LCD_Init>
	SPI_Init();
  94:	0e 94 db 00 	call	0x1b6	; 0x1b6 <SPI_Init>
	
	LCD_String_xy(1, 0, "Slave Device");
  98:	40 e6       	ldi	r20, 0x60	; 96
  9a:	50 e0       	ldi	r21, 0x00	; 0
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	LCD_String_xy(2, 0, "Receive Data:    ");
  a4:	4d e6       	ldi	r20, 0x6D	; 109
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
    while(1)
    {
        //TODO:: Please write your application code 
		count = SPI_Receive();
		sprintf(buffer, "%d   ", count);
  b0:	0f 2e       	mov	r0, r31
  b2:	ff e7       	ldi	r31, 0x7F	; 127
  b4:	ef 2e       	mov	r14, r31
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	ff 2e       	mov	r15, r31
  ba:	f0 2d       	mov	r31, r0
  bc:	8e 01       	movw	r16, r28
  be:	0f 5f       	subi	r16, 0xFF	; 255
  c0:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_String_xy(1, 0, "Slave Device");
	LCD_String_xy(2, 0, "Receive Data:    ");
    while(1)
    {
        //TODO:: Please write your application code 
		count = SPI_Receive();
  c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <SPI_Receive>
		sprintf(buffer, "%d   ", count);
  c6:	1f 92       	push	r1
  c8:	8f 93       	push	r24
  ca:	ff 92       	push	r15
  cc:	ef 92       	push	r14
  ce:	1f 93       	push	r17
  d0:	0f 93       	push	r16
  d2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <sprintf>
		LCD_String_xy(2, 13, buffer);
  d6:	a8 01       	movw	r20, r16
  d8:	6d e0       	ldi	r22, 0x0D	; 13
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	ea cf       	rjmp	.-44     	; 0xc2 <main+0x40>

000000ee <LCD_Command>:
#include "LCD_16x2_H_file.h"						/* Include LCD header file */


void LCD_Command (char cmd)							/* LCD command write function */
{
	LCD_Data_Port = cmd;							/* Write command data to LCD data port */
  ee:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
  f0:	85 b3       	in	r24, 0x15	; 21
  f2:	87 7e       	andi	r24, 0xE7	; 231
  f4:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
  f6:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8a 95       	dec	r24
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Command+0xc>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <LCD_Command+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 100:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e6       	ldi	r24, 0x6F	; 111
 104:	97 e1       	ldi	r25, 0x17	; 23
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Command+0x18>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Command+0x1e>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <LCD_Char>:
	_delay_ms(3);									/* Wait little bit */
}

void LCD_Char (char char_data)						/* LCD data write function */
{
	LCD_Data_Port = char_data;						/* Write data to LCD data port */
 110:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 112:	ab 98       	cbi	0x15, 3	; 21
	LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 114:	85 b3       	in	r24, 0x15	; 21
 116:	84 61       	ori	r24, 0x14	; 20
 118:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	8a 95       	dec	r24
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_Char+0xc>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_Char+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 122:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	8f ec       	ldi	r24, 0xCF	; 207
 126:	97 e0       	ldi	r25, 0x07	; 7
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <LCD_Char+0x18>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <LCD_Char+0x1e>
 12e:	00 00       	nop
 130:	08 95       	ret

00000132 <LCD_Init>:
	_delay_ms(1);									/* Wait little bit */
}

void LCD_Init (void)								/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 132:	84 b3       	in	r24, 0x14	; 20
 134:	8c 61       	ori	r24, 0x1C	; 28
 136:	84 bb       	out	0x14, r24	; 20
	LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	81 bb       	out	0x11, r24	; 17
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9c e9       	ldi	r25, 0x9C	; 156
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_Init+0xe>
 144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_Init+0x14>
 146:	00 00       	nop
	
	_delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 148:	88 e3       	ldi	r24, 0x38	; 56
 14a:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x06);								/* Auto Increment cursor */
 154:	86 e0       	ldi	r24, 0x06	; 6
 156:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x01);								/* Clear LCD command */
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 160:	80 e8       	ldi	r24, 0x80	; 128
 162:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 166:	08 95       	ret

00000168 <LCD_String>:
}

void LCD_String (char *str)							/* Send string to LCD function */
{
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 16e:	88 81       	ld	r24, Y
 170:	88 23       	and	r24, r24
 172:	31 f0       	breq	.+12     	; 0x180 <LCD_String+0x18>
	LCD_Command (0x06);								/* Auto Increment cursor */
	LCD_Command (0x01);								/* Clear LCD command */
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
}

void LCD_String (char *str)							/* Send string to LCD function */
 174:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
	{
		LCD_Char (str[i]);							/* Call LCD data write */
 176:	0e 94 88 00 	call	0x110	; 0x110 <LCD_Char>
}

void LCD_String (char *str)							/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 17a:	89 91       	ld	r24, Y+
 17c:	81 11       	cpse	r24, r1
 17e:	fb cf       	rjmp	.-10     	; 0x176 <LCD_String+0xe>
	{
		LCD_Char (str[i]);							/* Call LCD data write */
	}
}
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
{
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ea 01       	movw	r28, r20
	if (row == 1)
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	31 f4       	brne	.+12     	; 0x19c <LCD_String_xy+0x16>
	LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 190:	86 2f       	mov	r24, r22
 192:	8f 70       	andi	r24, 0x0F	; 15
 194:	80 68       	ori	r24, 0x80	; 128
 196:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 19a:	07 c0       	rjmp	.+14     	; 0x1aa <LCD_String_xy+0x24>
	else if (row == 2)
 19c:	82 30       	cpi	r24, 0x02	; 2
 19e:	29 f4       	brne	.+10     	; 0x1aa <LCD_String_xy+0x24>
	LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 1a0:	86 2f       	mov	r24, r22
 1a2:	8f 70       	andi	r24, 0x0F	; 15
 1a4:	80 6c       	ori	r24, 0xC0	; 192
 1a6:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_String(str);								/* Call LCD string function */
 1aa:	ce 01       	movw	r24, r28
 1ac:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_String>
}
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <SPI_Init>:

#include "SPI_Slave_H_file.h"

void SPI_Init()									/* SPI Initialize function */
{
	DDRB &= ~((1<<MOSI)|(1<<SCK)|(1<<SS));		/* Make MOSI, SCK, SS pin direction as input pins */
 1b6:	87 b3       	in	r24, 0x17	; 23
 1b8:	8f 74       	andi	r24, 0x4F	; 79
 1ba:	87 bb       	out	0x17, r24	; 23
	DDRB |= (1<<MISO);							/* Make MISO pin as output pin */
 1bc:	be 9a       	sbi	0x17, 6	; 23
	SPCR = (1<<SPE);							/* Enable SPI in slave mode */
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	8d b9       	out	0x0d, r24	; 13
 1c2:	08 95       	ret

000001c4 <SPI_Receive>:
	return(SPDR);								/* return received data */
}

char SPI_Receive()								/* SPI Receive data function */
{
	while(!(SPSR & (1<<SPIF)));					/* Wait till reception complete */
 1c4:	77 9b       	sbis	0x0e, 7	; 14
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <SPI_Receive>
	return(SPDR);								/* return received data */
 1c8:	8f b1       	in	r24, 0x0f	; 15
}
 1ca:	08 95       	ret

000001cc <sprintf>:
 1cc:	ae e0       	ldi	r26, 0x0E	; 14
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ec ee       	ldi	r30, 0xEC	; 236
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	0c 94 92 03 	jmp	0x724	; 0x724 <__prologue_saves__+0x1c>
 1d8:	0d 89       	ldd	r16, Y+21	; 0x15
 1da:	1e 89       	ldd	r17, Y+22	; 0x16
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	8c 83       	std	Y+4, r24	; 0x04
 1e0:	1a 83       	std	Y+2, r17	; 0x02
 1e2:	09 83       	std	Y+1, r16	; 0x01
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	9f e7       	ldi	r25, 0x7F	; 127
 1e8:	9e 83       	std	Y+6, r25	; 0x06
 1ea:	8d 83       	std	Y+5, r24	; 0x05
 1ec:	ce 01       	movw	r24, r28
 1ee:	49 96       	adiw	r24, 0x19	; 25
 1f0:	ac 01       	movw	r20, r24
 1f2:	6f 89       	ldd	r22, Y+23	; 0x17
 1f4:	78 8d       	ldd	r23, Y+24	; 0x18
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	0e 94 08 01 	call	0x210	; 0x210 <vfprintf>
 1fe:	ef 81       	ldd	r30, Y+7	; 0x07
 200:	f8 85       	ldd	r31, Y+8	; 0x08
 202:	e0 0f       	add	r30, r16
 204:	f1 1f       	adc	r31, r17
 206:	10 82       	st	Z, r1
 208:	2e 96       	adiw	r28, 0x0e	; 14
 20a:	e4 e0       	ldi	r30, 0x04	; 4
 20c:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__epilogue_restores__+0x1c>

00000210 <vfprintf>:
 210:	ac e0       	ldi	r26, 0x0C	; 12
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	ee e0       	ldi	r30, 0x0E	; 14
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	0c 94 84 03 	jmp	0x708	; 0x708 <__prologue_saves__>
 21c:	7c 01       	movw	r14, r24
 21e:	6b 01       	movw	r12, r22
 220:	8a 01       	movw	r16, r20
 222:	fc 01       	movw	r30, r24
 224:	17 82       	std	Z+7, r1	; 0x07
 226:	16 82       	std	Z+6, r1	; 0x06
 228:	83 81       	ldd	r24, Z+3	; 0x03
 22a:	81 ff       	sbrs	r24, 1
 22c:	c6 c1       	rjmp	.+908    	; 0x5ba <vfprintf+0x3aa>
 22e:	88 24       	eor	r8, r8
 230:	83 94       	inc	r8
 232:	91 2c       	mov	r9, r1
 234:	8c 0e       	add	r8, r28
 236:	9d 1e       	adc	r9, r29
 238:	f7 01       	movw	r30, r14
 23a:	93 81       	ldd	r25, Z+3	; 0x03
 23c:	f6 01       	movw	r30, r12
 23e:	93 fd       	sbrc	r25, 3
 240:	85 91       	lpm	r24, Z+
 242:	93 ff       	sbrs	r25, 3
 244:	81 91       	ld	r24, Z+
 246:	6f 01       	movw	r12, r30
 248:	88 23       	and	r24, r24
 24a:	09 f4       	brne	.+2      	; 0x24e <vfprintf+0x3e>
 24c:	b2 c1       	rjmp	.+868    	; 0x5b2 <vfprintf+0x3a2>
 24e:	85 32       	cpi	r24, 0x25	; 37
 250:	39 f4       	brne	.+14     	; 0x260 <vfprintf+0x50>
 252:	93 fd       	sbrc	r25, 3
 254:	85 91       	lpm	r24, Z+
 256:	93 ff       	sbrs	r25, 3
 258:	81 91       	ld	r24, Z+
 25a:	6f 01       	movw	r12, r30
 25c:	85 32       	cpi	r24, 0x25	; 37
 25e:	29 f4       	brne	.+10     	; 0x26a <vfprintf+0x5a>
 260:	b7 01       	movw	r22, r14
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 268:	e7 cf       	rjmp	.-50     	; 0x238 <vfprintf+0x28>
 26a:	51 2c       	mov	r5, r1
 26c:	31 2c       	mov	r3, r1
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	20 32       	cpi	r18, 0x20	; 32
 272:	a8 f4       	brcc	.+42     	; 0x29e <vfprintf+0x8e>
 274:	8b 32       	cpi	r24, 0x2B	; 43
 276:	61 f0       	breq	.+24     	; 0x290 <vfprintf+0x80>
 278:	28 f4       	brcc	.+10     	; 0x284 <vfprintf+0x74>
 27a:	80 32       	cpi	r24, 0x20	; 32
 27c:	51 f0       	breq	.+20     	; 0x292 <vfprintf+0x82>
 27e:	83 32       	cpi	r24, 0x23	; 35
 280:	71 f4       	brne	.+28     	; 0x29e <vfprintf+0x8e>
 282:	0b c0       	rjmp	.+22     	; 0x29a <vfprintf+0x8a>
 284:	8d 32       	cpi	r24, 0x2D	; 45
 286:	39 f0       	breq	.+14     	; 0x296 <vfprintf+0x86>
 288:	80 33       	cpi	r24, 0x30	; 48
 28a:	49 f4       	brne	.+18     	; 0x29e <vfprintf+0x8e>
 28c:	21 60       	ori	r18, 0x01	; 1
 28e:	28 c0       	rjmp	.+80     	; 0x2e0 <vfprintf+0xd0>
 290:	22 60       	ori	r18, 0x02	; 2
 292:	24 60       	ori	r18, 0x04	; 4
 294:	25 c0       	rjmp	.+74     	; 0x2e0 <vfprintf+0xd0>
 296:	28 60       	ori	r18, 0x08	; 8
 298:	23 c0       	rjmp	.+70     	; 0x2e0 <vfprintf+0xd0>
 29a:	20 61       	ori	r18, 0x10	; 16
 29c:	21 c0       	rjmp	.+66     	; 0x2e0 <vfprintf+0xd0>
 29e:	27 fd       	sbrc	r18, 7
 2a0:	27 c0       	rjmp	.+78     	; 0x2f0 <vfprintf+0xe0>
 2a2:	38 2f       	mov	r19, r24
 2a4:	30 53       	subi	r19, 0x30	; 48
 2a6:	3a 30       	cpi	r19, 0x0A	; 10
 2a8:	78 f4       	brcc	.+30     	; 0x2c8 <vfprintf+0xb8>
 2aa:	26 ff       	sbrs	r18, 6
 2ac:	06 c0       	rjmp	.+12     	; 0x2ba <vfprintf+0xaa>
 2ae:	fa e0       	ldi	r31, 0x0A	; 10
 2b0:	5f 9e       	mul	r5, r31
 2b2:	30 0d       	add	r19, r0
 2b4:	11 24       	eor	r1, r1
 2b6:	53 2e       	mov	r5, r19
 2b8:	13 c0       	rjmp	.+38     	; 0x2e0 <vfprintf+0xd0>
 2ba:	8a e0       	ldi	r24, 0x0A	; 10
 2bc:	38 9e       	mul	r3, r24
 2be:	30 0d       	add	r19, r0
 2c0:	11 24       	eor	r1, r1
 2c2:	33 2e       	mov	r3, r19
 2c4:	20 62       	ori	r18, 0x20	; 32
 2c6:	0c c0       	rjmp	.+24     	; 0x2e0 <vfprintf+0xd0>
 2c8:	8e 32       	cpi	r24, 0x2E	; 46
 2ca:	21 f4       	brne	.+8      	; 0x2d4 <vfprintf+0xc4>
 2cc:	26 fd       	sbrc	r18, 6
 2ce:	71 c1       	rjmp	.+738    	; 0x5b2 <vfprintf+0x3a2>
 2d0:	20 64       	ori	r18, 0x40	; 64
 2d2:	06 c0       	rjmp	.+12     	; 0x2e0 <vfprintf+0xd0>
 2d4:	8c 36       	cpi	r24, 0x6C	; 108
 2d6:	11 f4       	brne	.+4      	; 0x2dc <vfprintf+0xcc>
 2d8:	20 68       	ori	r18, 0x80	; 128
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <vfprintf+0xd0>
 2dc:	88 36       	cpi	r24, 0x68	; 104
 2de:	41 f4       	brne	.+16     	; 0x2f0 <vfprintf+0xe0>
 2e0:	f6 01       	movw	r30, r12
 2e2:	93 fd       	sbrc	r25, 3
 2e4:	85 91       	lpm	r24, Z+
 2e6:	93 ff       	sbrs	r25, 3
 2e8:	81 91       	ld	r24, Z+
 2ea:	6f 01       	movw	r12, r30
 2ec:	81 11       	cpse	r24, r1
 2ee:	c0 cf       	rjmp	.-128    	; 0x270 <vfprintf+0x60>
 2f0:	98 2f       	mov	r25, r24
 2f2:	95 54       	subi	r25, 0x45	; 69
 2f4:	93 30       	cpi	r25, 0x03	; 3
 2f6:	18 f0       	brcs	.+6      	; 0x2fe <vfprintf+0xee>
 2f8:	90 52       	subi	r25, 0x20	; 32
 2fa:	93 30       	cpi	r25, 0x03	; 3
 2fc:	28 f4       	brcc	.+10     	; 0x308 <vfprintf+0xf8>
 2fe:	0c 5f       	subi	r16, 0xFC	; 252
 300:	1f 4f       	sbci	r17, 0xFF	; 255
 302:	ff e3       	ldi	r31, 0x3F	; 63
 304:	f9 83       	std	Y+1, r31	; 0x01
 306:	0d c0       	rjmp	.+26     	; 0x322 <vfprintf+0x112>
 308:	83 36       	cpi	r24, 0x63	; 99
 30a:	31 f0       	breq	.+12     	; 0x318 <vfprintf+0x108>
 30c:	83 37       	cpi	r24, 0x73	; 115
 30e:	71 f0       	breq	.+28     	; 0x32c <vfprintf+0x11c>
 310:	83 35       	cpi	r24, 0x53	; 83
 312:	09 f0       	breq	.+2      	; 0x316 <vfprintf+0x106>
 314:	5e c0       	rjmp	.+188    	; 0x3d2 <vfprintf+0x1c2>
 316:	23 c0       	rjmp	.+70     	; 0x35e <vfprintf+0x14e>
 318:	f8 01       	movw	r30, r16
 31a:	80 81       	ld	r24, Z
 31c:	89 83       	std	Y+1, r24	; 0x01
 31e:	0e 5f       	subi	r16, 0xFE	; 254
 320:	1f 4f       	sbci	r17, 0xFF	; 255
 322:	44 24       	eor	r4, r4
 324:	43 94       	inc	r4
 326:	51 2c       	mov	r5, r1
 328:	54 01       	movw	r10, r8
 32a:	15 c0       	rjmp	.+42     	; 0x356 <vfprintf+0x146>
 32c:	38 01       	movw	r6, r16
 32e:	f2 e0       	ldi	r31, 0x02	; 2
 330:	6f 0e       	add	r6, r31
 332:	71 1c       	adc	r7, r1
 334:	f8 01       	movw	r30, r16
 336:	a0 80       	ld	r10, Z
 338:	b1 80       	ldd	r11, Z+1	; 0x01
 33a:	26 ff       	sbrs	r18, 6
 33c:	03 c0       	rjmp	.+6      	; 0x344 <vfprintf+0x134>
 33e:	65 2d       	mov	r22, r5
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <vfprintf+0x138>
 344:	6f ef       	ldi	r22, 0xFF	; 255
 346:	7f ef       	ldi	r23, 0xFF	; 255
 348:	c5 01       	movw	r24, r10
 34a:	2c 87       	std	Y+12, r18	; 0x0c
 34c:	0e 94 ef 02 	call	0x5de	; 0x5de <strnlen>
 350:	2c 01       	movw	r4, r24
 352:	83 01       	movw	r16, r6
 354:	2c 85       	ldd	r18, Y+12	; 0x0c
 356:	6f e7       	ldi	r22, 0x7F	; 127
 358:	26 2e       	mov	r2, r22
 35a:	22 22       	and	r2, r18
 35c:	18 c0       	rjmp	.+48     	; 0x38e <vfprintf+0x17e>
 35e:	38 01       	movw	r6, r16
 360:	f2 e0       	ldi	r31, 0x02	; 2
 362:	6f 0e       	add	r6, r31
 364:	71 1c       	adc	r7, r1
 366:	f8 01       	movw	r30, r16
 368:	a0 80       	ld	r10, Z
 36a:	b1 80       	ldd	r11, Z+1	; 0x01
 36c:	26 ff       	sbrs	r18, 6
 36e:	03 c0       	rjmp	.+6      	; 0x376 <vfprintf+0x166>
 370:	65 2d       	mov	r22, r5
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <vfprintf+0x16a>
 376:	6f ef       	ldi	r22, 0xFF	; 255
 378:	7f ef       	ldi	r23, 0xFF	; 255
 37a:	c5 01       	movw	r24, r10
 37c:	2c 87       	std	Y+12, r18	; 0x0c
 37e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <strnlen_P>
 382:	2c 01       	movw	r4, r24
 384:	2c 85       	ldd	r18, Y+12	; 0x0c
 386:	50 e8       	ldi	r21, 0x80	; 128
 388:	25 2e       	mov	r2, r21
 38a:	22 2a       	or	r2, r18
 38c:	83 01       	movw	r16, r6
 38e:	23 fc       	sbrc	r2, 3
 390:	1c c0       	rjmp	.+56     	; 0x3ca <vfprintf+0x1ba>
 392:	06 c0       	rjmp	.+12     	; 0x3a0 <vfprintf+0x190>
 394:	b7 01       	movw	r22, r14
 396:	80 e2       	ldi	r24, 0x20	; 32
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 39e:	3a 94       	dec	r3
 3a0:	83 2d       	mov	r24, r3
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	48 16       	cp	r4, r24
 3a6:	59 06       	cpc	r5, r25
 3a8:	a8 f3       	brcs	.-22     	; 0x394 <vfprintf+0x184>
 3aa:	0f c0       	rjmp	.+30     	; 0x3ca <vfprintf+0x1ba>
 3ac:	f5 01       	movw	r30, r10
 3ae:	27 fc       	sbrc	r2, 7
 3b0:	85 91       	lpm	r24, Z+
 3b2:	27 fe       	sbrs	r2, 7
 3b4:	81 91       	ld	r24, Z+
 3b6:	5f 01       	movw	r10, r30
 3b8:	b7 01       	movw	r22, r14
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 3c0:	31 10       	cpse	r3, r1
 3c2:	3a 94       	dec	r3
 3c4:	f1 e0       	ldi	r31, 0x01	; 1
 3c6:	4f 1a       	sub	r4, r31
 3c8:	51 08       	sbc	r5, r1
 3ca:	41 14       	cp	r4, r1
 3cc:	51 04       	cpc	r5, r1
 3ce:	71 f7       	brne	.-36     	; 0x3ac <vfprintf+0x19c>
 3d0:	ed c0       	rjmp	.+474    	; 0x5ac <vfprintf+0x39c>
 3d2:	84 36       	cpi	r24, 0x64	; 100
 3d4:	11 f0       	breq	.+4      	; 0x3da <vfprintf+0x1ca>
 3d6:	89 36       	cpi	r24, 0x69	; 105
 3d8:	41 f5       	brne	.+80     	; 0x42a <vfprintf+0x21a>
 3da:	f8 01       	movw	r30, r16
 3dc:	27 ff       	sbrs	r18, 7
 3de:	07 c0       	rjmp	.+14     	; 0x3ee <vfprintf+0x1de>
 3e0:	60 81       	ld	r22, Z
 3e2:	71 81       	ldd	r23, Z+1	; 0x01
 3e4:	82 81       	ldd	r24, Z+2	; 0x02
 3e6:	93 81       	ldd	r25, Z+3	; 0x03
 3e8:	0c 5f       	subi	r16, 0xFC	; 252
 3ea:	1f 4f       	sbci	r17, 0xFF	; 255
 3ec:	08 c0       	rjmp	.+16     	; 0x3fe <vfprintf+0x1ee>
 3ee:	60 81       	ld	r22, Z
 3f0:	71 81       	ldd	r23, Z+1	; 0x01
 3f2:	88 27       	eor	r24, r24
 3f4:	77 fd       	sbrc	r23, 7
 3f6:	80 95       	com	r24
 3f8:	98 2f       	mov	r25, r24
 3fa:	0e 5f       	subi	r16, 0xFE	; 254
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	4f e6       	ldi	r20, 0x6F	; 111
 400:	b4 2e       	mov	r11, r20
 402:	b2 22       	and	r11, r18
 404:	97 ff       	sbrs	r25, 7
 406:	09 c0       	rjmp	.+18     	; 0x41a <vfprintf+0x20a>
 408:	90 95       	com	r25
 40a:	80 95       	com	r24
 40c:	70 95       	com	r23
 40e:	61 95       	neg	r22
 410:	7f 4f       	sbci	r23, 0xFF	; 255
 412:	8f 4f       	sbci	r24, 0xFF	; 255
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	f0 e8       	ldi	r31, 0x80	; 128
 418:	bf 2a       	or	r11, r31
 41a:	2a e0       	ldi	r18, 0x0A	; 10
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	a4 01       	movw	r20, r8
 420:	0e 94 26 03 	call	0x64c	; 0x64c <__ultoa_invert>
 424:	a8 2e       	mov	r10, r24
 426:	a8 18       	sub	r10, r8
 428:	43 c0       	rjmp	.+134    	; 0x4b0 <vfprintf+0x2a0>
 42a:	85 37       	cpi	r24, 0x75	; 117
 42c:	31 f4       	brne	.+12     	; 0x43a <vfprintf+0x22a>
 42e:	3f ee       	ldi	r19, 0xEF	; 239
 430:	b3 2e       	mov	r11, r19
 432:	b2 22       	and	r11, r18
 434:	2a e0       	ldi	r18, 0x0A	; 10
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	24 c0       	rjmp	.+72     	; 0x482 <vfprintf+0x272>
 43a:	99 ef       	ldi	r25, 0xF9	; 249
 43c:	b9 2e       	mov	r11, r25
 43e:	b2 22       	and	r11, r18
 440:	8f 36       	cpi	r24, 0x6F	; 111
 442:	b9 f0       	breq	.+46     	; 0x472 <vfprintf+0x262>
 444:	20 f4       	brcc	.+8      	; 0x44e <vfprintf+0x23e>
 446:	88 35       	cpi	r24, 0x58	; 88
 448:	09 f0       	breq	.+2      	; 0x44c <vfprintf+0x23c>
 44a:	b3 c0       	rjmp	.+358    	; 0x5b2 <vfprintf+0x3a2>
 44c:	0d c0       	rjmp	.+26     	; 0x468 <vfprintf+0x258>
 44e:	80 37       	cpi	r24, 0x70	; 112
 450:	21 f0       	breq	.+8      	; 0x45a <vfprintf+0x24a>
 452:	88 37       	cpi	r24, 0x78	; 120
 454:	09 f0       	breq	.+2      	; 0x458 <vfprintf+0x248>
 456:	ad c0       	rjmp	.+346    	; 0x5b2 <vfprintf+0x3a2>
 458:	02 c0       	rjmp	.+4      	; 0x45e <vfprintf+0x24e>
 45a:	20 e1       	ldi	r18, 0x10	; 16
 45c:	b2 2a       	or	r11, r18
 45e:	b4 fe       	sbrs	r11, 4
 460:	0b c0       	rjmp	.+22     	; 0x478 <vfprintf+0x268>
 462:	84 e0       	ldi	r24, 0x04	; 4
 464:	b8 2a       	or	r11, r24
 466:	08 c0       	rjmp	.+16     	; 0x478 <vfprintf+0x268>
 468:	24 ff       	sbrs	r18, 4
 46a:	09 c0       	rjmp	.+18     	; 0x47e <vfprintf+0x26e>
 46c:	e6 e0       	ldi	r30, 0x06	; 6
 46e:	be 2a       	or	r11, r30
 470:	06 c0       	rjmp	.+12     	; 0x47e <vfprintf+0x26e>
 472:	28 e0       	ldi	r18, 0x08	; 8
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	05 c0       	rjmp	.+10     	; 0x482 <vfprintf+0x272>
 478:	20 e1       	ldi	r18, 0x10	; 16
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	02 c0       	rjmp	.+4      	; 0x482 <vfprintf+0x272>
 47e:	20 e1       	ldi	r18, 0x10	; 16
 480:	32 e0       	ldi	r19, 0x02	; 2
 482:	f8 01       	movw	r30, r16
 484:	b7 fe       	sbrs	r11, 7
 486:	07 c0       	rjmp	.+14     	; 0x496 <vfprintf+0x286>
 488:	60 81       	ld	r22, Z
 48a:	71 81       	ldd	r23, Z+1	; 0x01
 48c:	82 81       	ldd	r24, Z+2	; 0x02
 48e:	93 81       	ldd	r25, Z+3	; 0x03
 490:	0c 5f       	subi	r16, 0xFC	; 252
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	06 c0       	rjmp	.+12     	; 0x4a2 <vfprintf+0x292>
 496:	60 81       	ld	r22, Z
 498:	71 81       	ldd	r23, Z+1	; 0x01
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 5f       	subi	r16, 0xFE	; 254
 4a0:	1f 4f       	sbci	r17, 0xFF	; 255
 4a2:	a4 01       	movw	r20, r8
 4a4:	0e 94 26 03 	call	0x64c	; 0x64c <__ultoa_invert>
 4a8:	a8 2e       	mov	r10, r24
 4aa:	a8 18       	sub	r10, r8
 4ac:	ff e7       	ldi	r31, 0x7F	; 127
 4ae:	bf 22       	and	r11, r31
 4b0:	b6 fe       	sbrs	r11, 6
 4b2:	0b c0       	rjmp	.+22     	; 0x4ca <vfprintf+0x2ba>
 4b4:	2b 2d       	mov	r18, r11
 4b6:	2e 7f       	andi	r18, 0xFE	; 254
 4b8:	a5 14       	cp	r10, r5
 4ba:	50 f4       	brcc	.+20     	; 0x4d0 <vfprintf+0x2c0>
 4bc:	b4 fe       	sbrs	r11, 4
 4be:	0a c0       	rjmp	.+20     	; 0x4d4 <vfprintf+0x2c4>
 4c0:	b2 fc       	sbrc	r11, 2
 4c2:	08 c0       	rjmp	.+16     	; 0x4d4 <vfprintf+0x2c4>
 4c4:	2b 2d       	mov	r18, r11
 4c6:	2e 7e       	andi	r18, 0xEE	; 238
 4c8:	05 c0       	rjmp	.+10     	; 0x4d4 <vfprintf+0x2c4>
 4ca:	7a 2c       	mov	r7, r10
 4cc:	2b 2d       	mov	r18, r11
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <vfprintf+0x2c6>
 4d0:	7a 2c       	mov	r7, r10
 4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <vfprintf+0x2c6>
 4d4:	75 2c       	mov	r7, r5
 4d6:	24 ff       	sbrs	r18, 4
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <vfprintf+0x2e4>
 4da:	fe 01       	movw	r30, r28
 4dc:	ea 0d       	add	r30, r10
 4de:	f1 1d       	adc	r31, r1
 4e0:	80 81       	ld	r24, Z
 4e2:	80 33       	cpi	r24, 0x30	; 48
 4e4:	11 f4       	brne	.+4      	; 0x4ea <vfprintf+0x2da>
 4e6:	29 7e       	andi	r18, 0xE9	; 233
 4e8:	09 c0       	rjmp	.+18     	; 0x4fc <vfprintf+0x2ec>
 4ea:	22 ff       	sbrs	r18, 2
 4ec:	06 c0       	rjmp	.+12     	; 0x4fa <vfprintf+0x2ea>
 4ee:	73 94       	inc	r7
 4f0:	73 94       	inc	r7
 4f2:	04 c0       	rjmp	.+8      	; 0x4fc <vfprintf+0x2ec>
 4f4:	82 2f       	mov	r24, r18
 4f6:	86 78       	andi	r24, 0x86	; 134
 4f8:	09 f0       	breq	.+2      	; 0x4fc <vfprintf+0x2ec>
 4fa:	73 94       	inc	r7
 4fc:	23 fd       	sbrc	r18, 3
 4fe:	14 c0       	rjmp	.+40     	; 0x528 <vfprintf+0x318>
 500:	20 ff       	sbrs	r18, 0
 502:	0f c0       	rjmp	.+30     	; 0x522 <vfprintf+0x312>
 504:	5a 2c       	mov	r5, r10
 506:	73 14       	cp	r7, r3
 508:	60 f4       	brcc	.+24     	; 0x522 <vfprintf+0x312>
 50a:	53 0c       	add	r5, r3
 50c:	57 18       	sub	r5, r7
 50e:	73 2c       	mov	r7, r3
 510:	08 c0       	rjmp	.+16     	; 0x522 <vfprintf+0x312>
 512:	b7 01       	movw	r22, r14
 514:	80 e2       	ldi	r24, 0x20	; 32
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	2c 87       	std	Y+12, r18	; 0x0c
 51a:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 51e:	73 94       	inc	r7
 520:	2c 85       	ldd	r18, Y+12	; 0x0c
 522:	73 14       	cp	r7, r3
 524:	b0 f3       	brcs	.-20     	; 0x512 <vfprintf+0x302>
 526:	04 c0       	rjmp	.+8      	; 0x530 <vfprintf+0x320>
 528:	73 14       	cp	r7, r3
 52a:	10 f4       	brcc	.+4      	; 0x530 <vfprintf+0x320>
 52c:	37 18       	sub	r3, r7
 52e:	01 c0       	rjmp	.+2      	; 0x532 <vfprintf+0x322>
 530:	31 2c       	mov	r3, r1
 532:	24 ff       	sbrs	r18, 4
 534:	12 c0       	rjmp	.+36     	; 0x55a <vfprintf+0x34a>
 536:	b7 01       	movw	r22, r14
 538:	80 e3       	ldi	r24, 0x30	; 48
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	2c 87       	std	Y+12, r18	; 0x0c
 53e:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 542:	2c 85       	ldd	r18, Y+12	; 0x0c
 544:	22 ff       	sbrs	r18, 2
 546:	1e c0       	rjmp	.+60     	; 0x584 <vfprintf+0x374>
 548:	21 ff       	sbrs	r18, 1
 54a:	03 c0       	rjmp	.+6      	; 0x552 <vfprintf+0x342>
 54c:	88 e5       	ldi	r24, 0x58	; 88
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	02 c0       	rjmp	.+4      	; 0x556 <vfprintf+0x346>
 552:	88 e7       	ldi	r24, 0x78	; 120
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	b7 01       	movw	r22, r14
 558:	0c c0       	rjmp	.+24     	; 0x572 <vfprintf+0x362>
 55a:	82 2f       	mov	r24, r18
 55c:	86 78       	andi	r24, 0x86	; 134
 55e:	91 f0       	breq	.+36     	; 0x584 <vfprintf+0x374>
 560:	21 fd       	sbrc	r18, 1
 562:	02 c0       	rjmp	.+4      	; 0x568 <vfprintf+0x358>
 564:	80 e2       	ldi	r24, 0x20	; 32
 566:	01 c0       	rjmp	.+2      	; 0x56a <vfprintf+0x35a>
 568:	8b e2       	ldi	r24, 0x2B	; 43
 56a:	27 fd       	sbrc	r18, 7
 56c:	8d e2       	ldi	r24, 0x2D	; 45
 56e:	b7 01       	movw	r22, r14
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 576:	06 c0       	rjmp	.+12     	; 0x584 <vfprintf+0x374>
 578:	b7 01       	movw	r22, r14
 57a:	80 e3       	ldi	r24, 0x30	; 48
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 582:	5a 94       	dec	r5
 584:	a5 14       	cp	r10, r5
 586:	c0 f3       	brcs	.-16     	; 0x578 <vfprintf+0x368>
 588:	aa 94       	dec	r10
 58a:	f4 01       	movw	r30, r8
 58c:	ea 0d       	add	r30, r10
 58e:	f1 1d       	adc	r31, r1
 590:	b7 01       	movw	r22, r14
 592:	80 81       	ld	r24, Z
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 59a:	a1 10       	cpse	r10, r1
 59c:	f5 cf       	rjmp	.-22     	; 0x588 <vfprintf+0x378>
 59e:	06 c0       	rjmp	.+12     	; 0x5ac <vfprintf+0x39c>
 5a0:	b7 01       	movw	r22, r14
 5a2:	80 e2       	ldi	r24, 0x20	; 32
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <fputc>
 5aa:	3a 94       	dec	r3
 5ac:	31 10       	cpse	r3, r1
 5ae:	f8 cf       	rjmp	.-16     	; 0x5a0 <vfprintf+0x390>
 5b0:	43 ce       	rjmp	.-890    	; 0x238 <vfprintf+0x28>
 5b2:	f7 01       	movw	r30, r14
 5b4:	26 81       	ldd	r18, Z+6	; 0x06
 5b6:	37 81       	ldd	r19, Z+7	; 0x07
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <vfprintf+0x3ae>
 5ba:	2f ef       	ldi	r18, 0xFF	; 255
 5bc:	3f ef       	ldi	r19, 0xFF	; 255
 5be:	c9 01       	movw	r24, r18
 5c0:	2c 96       	adiw	r28, 0x0c	; 12
 5c2:	e2 e1       	ldi	r30, 0x12	; 18
 5c4:	0c 94 a0 03 	jmp	0x740	; 0x740 <__epilogue_restores__>

000005c8 <strnlen_P>:
 5c8:	fc 01       	movw	r30, r24
 5ca:	05 90       	lpm	r0, Z+
 5cc:	61 50       	subi	r22, 0x01	; 1
 5ce:	70 40       	sbci	r23, 0x00	; 0
 5d0:	01 10       	cpse	r0, r1
 5d2:	d8 f7       	brcc	.-10     	; 0x5ca <strnlen_P+0x2>
 5d4:	80 95       	com	r24
 5d6:	90 95       	com	r25
 5d8:	8e 0f       	add	r24, r30
 5da:	9f 1f       	adc	r25, r31
 5dc:	08 95       	ret

000005de <strnlen>:
 5de:	fc 01       	movw	r30, r24
 5e0:	61 50       	subi	r22, 0x01	; 1
 5e2:	70 40       	sbci	r23, 0x00	; 0
 5e4:	01 90       	ld	r0, Z+
 5e6:	01 10       	cpse	r0, r1
 5e8:	d8 f7       	brcc	.-10     	; 0x5e0 <strnlen+0x2>
 5ea:	80 95       	com	r24
 5ec:	90 95       	com	r25
 5ee:	8e 0f       	add	r24, r30
 5f0:	9f 1f       	adc	r25, r31
 5f2:	08 95       	ret

000005f4 <fputc>:
 5f4:	0f 93       	push	r16
 5f6:	1f 93       	push	r17
 5f8:	cf 93       	push	r28
 5fa:	df 93       	push	r29
 5fc:	8c 01       	movw	r16, r24
 5fe:	eb 01       	movw	r28, r22
 600:	8b 81       	ldd	r24, Y+3	; 0x03
 602:	81 fd       	sbrc	r24, 1
 604:	03 c0       	rjmp	.+6      	; 0x60c <fputc+0x18>
 606:	0f ef       	ldi	r16, 0xFF	; 255
 608:	1f ef       	ldi	r17, 0xFF	; 255
 60a:	1a c0       	rjmp	.+52     	; 0x640 <fputc+0x4c>
 60c:	82 ff       	sbrs	r24, 2
 60e:	0d c0       	rjmp	.+26     	; 0x62a <fputc+0x36>
 610:	2e 81       	ldd	r18, Y+6	; 0x06
 612:	3f 81       	ldd	r19, Y+7	; 0x07
 614:	8c 81       	ldd	r24, Y+4	; 0x04
 616:	9d 81       	ldd	r25, Y+5	; 0x05
 618:	28 17       	cp	r18, r24
 61a:	39 07       	cpc	r19, r25
 61c:	64 f4       	brge	.+24     	; 0x636 <fputc+0x42>
 61e:	e8 81       	ld	r30, Y
 620:	f9 81       	ldd	r31, Y+1	; 0x01
 622:	01 93       	st	Z+, r16
 624:	f9 83       	std	Y+1, r31	; 0x01
 626:	e8 83       	st	Y, r30
 628:	06 c0       	rjmp	.+12     	; 0x636 <fputc+0x42>
 62a:	e8 85       	ldd	r30, Y+8	; 0x08
 62c:	f9 85       	ldd	r31, Y+9	; 0x09
 62e:	80 2f       	mov	r24, r16
 630:	09 95       	icall
 632:	89 2b       	or	r24, r25
 634:	41 f7       	brne	.-48     	; 0x606 <fputc+0x12>
 636:	8e 81       	ldd	r24, Y+6	; 0x06
 638:	9f 81       	ldd	r25, Y+7	; 0x07
 63a:	01 96       	adiw	r24, 0x01	; 1
 63c:	9f 83       	std	Y+7, r25	; 0x07
 63e:	8e 83       	std	Y+6, r24	; 0x06
 640:	c8 01       	movw	r24, r16
 642:	df 91       	pop	r29
 644:	cf 91       	pop	r28
 646:	1f 91       	pop	r17
 648:	0f 91       	pop	r16
 64a:	08 95       	ret

0000064c <__ultoa_invert>:
 64c:	fa 01       	movw	r30, r20
 64e:	aa 27       	eor	r26, r26
 650:	28 30       	cpi	r18, 0x08	; 8
 652:	51 f1       	breq	.+84     	; 0x6a8 <__ultoa_invert+0x5c>
 654:	20 31       	cpi	r18, 0x10	; 16
 656:	81 f1       	breq	.+96     	; 0x6b8 <__ultoa_invert+0x6c>
 658:	e8 94       	clt
 65a:	6f 93       	push	r22
 65c:	6e 7f       	andi	r22, 0xFE	; 254
 65e:	6e 5f       	subi	r22, 0xFE	; 254
 660:	7f 4f       	sbci	r23, 0xFF	; 255
 662:	8f 4f       	sbci	r24, 0xFF	; 255
 664:	9f 4f       	sbci	r25, 0xFF	; 255
 666:	af 4f       	sbci	r26, 0xFF	; 255
 668:	b1 e0       	ldi	r27, 0x01	; 1
 66a:	3e d0       	rcall	.+124    	; 0x6e8 <__ultoa_invert+0x9c>
 66c:	b4 e0       	ldi	r27, 0x04	; 4
 66e:	3c d0       	rcall	.+120    	; 0x6e8 <__ultoa_invert+0x9c>
 670:	67 0f       	add	r22, r23
 672:	78 1f       	adc	r23, r24
 674:	89 1f       	adc	r24, r25
 676:	9a 1f       	adc	r25, r26
 678:	a1 1d       	adc	r26, r1
 67a:	68 0f       	add	r22, r24
 67c:	79 1f       	adc	r23, r25
 67e:	8a 1f       	adc	r24, r26
 680:	91 1d       	adc	r25, r1
 682:	a1 1d       	adc	r26, r1
 684:	6a 0f       	add	r22, r26
 686:	71 1d       	adc	r23, r1
 688:	81 1d       	adc	r24, r1
 68a:	91 1d       	adc	r25, r1
 68c:	a1 1d       	adc	r26, r1
 68e:	20 d0       	rcall	.+64     	; 0x6d0 <__ultoa_invert+0x84>
 690:	09 f4       	brne	.+2      	; 0x694 <__ultoa_invert+0x48>
 692:	68 94       	set
 694:	3f 91       	pop	r19
 696:	2a e0       	ldi	r18, 0x0A	; 10
 698:	26 9f       	mul	r18, r22
 69a:	11 24       	eor	r1, r1
 69c:	30 19       	sub	r19, r0
 69e:	30 5d       	subi	r19, 0xD0	; 208
 6a0:	31 93       	st	Z+, r19
 6a2:	de f6       	brtc	.-74     	; 0x65a <__ultoa_invert+0xe>
 6a4:	cf 01       	movw	r24, r30
 6a6:	08 95       	ret
 6a8:	46 2f       	mov	r20, r22
 6aa:	47 70       	andi	r20, 0x07	; 7
 6ac:	40 5d       	subi	r20, 0xD0	; 208
 6ae:	41 93       	st	Z+, r20
 6b0:	b3 e0       	ldi	r27, 0x03	; 3
 6b2:	0f d0       	rcall	.+30     	; 0x6d2 <__ultoa_invert+0x86>
 6b4:	c9 f7       	brne	.-14     	; 0x6a8 <__ultoa_invert+0x5c>
 6b6:	f6 cf       	rjmp	.-20     	; 0x6a4 <__ultoa_invert+0x58>
 6b8:	46 2f       	mov	r20, r22
 6ba:	4f 70       	andi	r20, 0x0F	; 15
 6bc:	40 5d       	subi	r20, 0xD0	; 208
 6be:	4a 33       	cpi	r20, 0x3A	; 58
 6c0:	18 f0       	brcs	.+6      	; 0x6c8 <__ultoa_invert+0x7c>
 6c2:	49 5d       	subi	r20, 0xD9	; 217
 6c4:	31 fd       	sbrc	r19, 1
 6c6:	40 52       	subi	r20, 0x20	; 32
 6c8:	41 93       	st	Z+, r20
 6ca:	02 d0       	rcall	.+4      	; 0x6d0 <__ultoa_invert+0x84>
 6cc:	a9 f7       	brne	.-22     	; 0x6b8 <__ultoa_invert+0x6c>
 6ce:	ea cf       	rjmp	.-44     	; 0x6a4 <__ultoa_invert+0x58>
 6d0:	b4 e0       	ldi	r27, 0x04	; 4
 6d2:	a6 95       	lsr	r26
 6d4:	97 95       	ror	r25
 6d6:	87 95       	ror	r24
 6d8:	77 95       	ror	r23
 6da:	67 95       	ror	r22
 6dc:	ba 95       	dec	r27
 6de:	c9 f7       	brne	.-14     	; 0x6d2 <__ultoa_invert+0x86>
 6e0:	00 97       	sbiw	r24, 0x00	; 0
 6e2:	61 05       	cpc	r22, r1
 6e4:	71 05       	cpc	r23, r1
 6e6:	08 95       	ret
 6e8:	9b 01       	movw	r18, r22
 6ea:	ac 01       	movw	r20, r24
 6ec:	0a 2e       	mov	r0, r26
 6ee:	06 94       	lsr	r0
 6f0:	57 95       	ror	r21
 6f2:	47 95       	ror	r20
 6f4:	37 95       	ror	r19
 6f6:	27 95       	ror	r18
 6f8:	ba 95       	dec	r27
 6fa:	c9 f7       	brne	.-14     	; 0x6ee <__ultoa_invert+0xa2>
 6fc:	62 0f       	add	r22, r18
 6fe:	73 1f       	adc	r23, r19
 700:	84 1f       	adc	r24, r20
 702:	95 1f       	adc	r25, r21
 704:	a0 1d       	adc	r26, r0
 706:	08 95       	ret

00000708 <__prologue_saves__>:
 708:	2f 92       	push	r2
 70a:	3f 92       	push	r3
 70c:	4f 92       	push	r4
 70e:	5f 92       	push	r5
 710:	6f 92       	push	r6
 712:	7f 92       	push	r7
 714:	8f 92       	push	r8
 716:	9f 92       	push	r9
 718:	af 92       	push	r10
 71a:	bf 92       	push	r11
 71c:	cf 92       	push	r12
 71e:	df 92       	push	r13
 720:	ef 92       	push	r14
 722:	ff 92       	push	r15
 724:	0f 93       	push	r16
 726:	1f 93       	push	r17
 728:	cf 93       	push	r28
 72a:	df 93       	push	r29
 72c:	cd b7       	in	r28, 0x3d	; 61
 72e:	de b7       	in	r29, 0x3e	; 62
 730:	ca 1b       	sub	r28, r26
 732:	db 0b       	sbc	r29, r27
 734:	0f b6       	in	r0, 0x3f	; 63
 736:	f8 94       	cli
 738:	de bf       	out	0x3e, r29	; 62
 73a:	0f be       	out	0x3f, r0	; 63
 73c:	cd bf       	out	0x3d, r28	; 61
 73e:	09 94       	ijmp

00000740 <__epilogue_restores__>:
 740:	2a 88       	ldd	r2, Y+18	; 0x12
 742:	39 88       	ldd	r3, Y+17	; 0x11
 744:	48 88       	ldd	r4, Y+16	; 0x10
 746:	5f 84       	ldd	r5, Y+15	; 0x0f
 748:	6e 84       	ldd	r6, Y+14	; 0x0e
 74a:	7d 84       	ldd	r7, Y+13	; 0x0d
 74c:	8c 84       	ldd	r8, Y+12	; 0x0c
 74e:	9b 84       	ldd	r9, Y+11	; 0x0b
 750:	aa 84       	ldd	r10, Y+10	; 0x0a
 752:	b9 84       	ldd	r11, Y+9	; 0x09
 754:	c8 84       	ldd	r12, Y+8	; 0x08
 756:	df 80       	ldd	r13, Y+7	; 0x07
 758:	ee 80       	ldd	r14, Y+6	; 0x06
 75a:	fd 80       	ldd	r15, Y+5	; 0x05
 75c:	0c 81       	ldd	r16, Y+4	; 0x04
 75e:	1b 81       	ldd	r17, Y+3	; 0x03
 760:	aa 81       	ldd	r26, Y+2	; 0x02
 762:	b9 81       	ldd	r27, Y+1	; 0x01
 764:	ce 0f       	add	r28, r30
 766:	d1 1d       	adc	r29, r1
 768:	0f b6       	in	r0, 0x3f	; 63
 76a:	f8 94       	cli
 76c:	de bf       	out	0x3e, r29	; 62
 76e:	0f be       	out	0x3f, r0	; 63
 770:	cd bf       	out	0x3d, r28	; 61
 772:	ed 01       	movw	r28, r26
 774:	08 95       	ret

00000776 <_exit>:
 776:	f8 94       	cli

00000778 <__stop_program>:
 778:	ff cf       	rjmp	.-2      	; 0x778 <__stop_program>
